
Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ git config --global user.name "hrishi_budhwant"

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ git config --global user.email "hrishibudhwant@gmail.com"

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=true
core.editor="C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe" --wait
pull.rebase=false
credential.helper=manager
user.name=hrishi_budhwant
user.email=hrishibudhwant@gmail.com

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ echo git config
git config

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ echo $git\ config
 config

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ echo $"git\ config"
git\ config

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ echo $(git config)
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry



Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ ls
File1.txt

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo
$ git init
Initialized empty Git repository in G:/Persistent Training/Git/GitELTPProjectRepo/.git/

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ ls
File1.txt

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ ls
File1.txt

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ cat .git
cat: .git: Is a directory

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ cd .git

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git (GIT_DIR!)
$ ls
config  description  HEAD  hooks/  info/  objects/  refs/

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git (GIT_DIR!)
$ cat config
[core]
        repositoryformatversion = 0
        filemode = false
        bare = false
        logallrefupdates = true
        ignorecase = true

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git (GIT_DIR!)
$ cat description
Unnamed repository; edit this file 'description' to name the repository.

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git (GIT_DIR!)
$ cd info/

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git/info (GIT_DIR!)
$ ls
exclude

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git/info (GIT_DIR!)
$ cat exclude
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo/.git/info (GIT_DIR!)
$ cd ../..

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ ls
File1.txt

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        File1.txt

nothing added to commit but untracked files present (use "git add" to track)

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git add .

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   File1.txt


Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git commit -m "WI1:File1 created with Hello World added"
[master (root-commit) 41a2b1c] WI1:File1 created with Hello World added
 1 file changed, 1 insertion(+)
 create mode 100644 File1.txt

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
nothing to commit, working tree clean

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   File1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git commit -am "WI1:File1 modified for Change 1, login feature"
[master 520d17f] WI1:File1 modified for Change 1, login feature
 1 file changed, 3 insertions(+), 1 deletion(-)

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
nothing to commit, working tree clean

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log
commit 520d17f57600b8b9fdb3813ad6a93da12823f09c (HEAD -> master)
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:52:42 2020 +0530

    WI1:File1 modified for Change 1, login feature

commit 41a2b1c7466beff330b6adbf093e963d8f405bc1
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:48:27 2020 +0530

    WI1:File1 created with Hello World added

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   File1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git add .

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   File1.txt


Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git commit
hint: Waiting for your editor to close the file...
[main 2020-09-15T09:30:32.952Z] update#setState idle
[main 2020-09-15T09:31:02.954Z] update#setState checking for updates
[main 2020-09-15T09:31:04.366Z] update#setState downloading
[main 2020-09-15T09:31:04.369Z] update#setState downloaded
[master a0a1d94] WI2: Logout feature in File1 and Change 3 for enhancement in login feature.
 1 file changed, 5 insertions(+), 1 deletion(-)

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
nothing to commit, working tree clean

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log
commit a0a1d94bc1e89f3dfe00fa5d0fae0f7499d09e86 (HEAD -> master)
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 15:00:32 2020 +0530

    WI2: Logout feature in File1 and Change 3 for enhancement in login feature.

commit 520d17f57600b8b9fdb3813ad6a93da12823f09c
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:52:42 2020 +0530

    WI1:File1 modified for Change 1, login feature

commit 41a2b1c7466beff330b6adbf093e963d8f405bc1
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:48:27 2020 +0530

    WI1:File1 created with Hello World added

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log -2
commit a0a1d94bc1e89f3dfe00fa5d0fae0f7499d09e86 (HEAD -> master)
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 15:00:32 2020 +0530

    WI2: Logout feature in File1 and Change 3 for enhancement in login feature.

commit 520d17f57600b8b9fdb3813ad6a93da12823f09c
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:52:42 2020 +0530

    WI1:File1 modified for Change 1, login feature

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log -2 --one-line
fatal: unrecognized argument: --one-line

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log -2 --oneline
a0a1d94 (HEAD -> master) WI2: Logout feature in File1 and Change 3 for enhancement in login feature.
520d17f WI1:File1 modified for Change 1, login feature

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log --since='09/14/2020'
commit a0a1d94bc1e89f3dfe00fa5d0fae0f7499d09e86 (HEAD -> master)
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 15:00:32 2020 +0530

    WI2: Logout feature in File1 and Change 3 for enhancement in login feature.

commit 520d17f57600b8b9fdb3813ad6a93da12823f09c
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:52:42 2020 +0530

    WI1:File1 modified for Change 1, login feature

commit 41a2b1c7466beff330b6adbf093e963d8f405bc1
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:48:27 2020 +0530

    WI1:File1 created with Hello World added

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log --since='09/14/2020' --oneline
a0a1d94 (HEAD -> master) WI2: Logout feature in File1 and Change 3 for enhancement in login feature.
520d17f WI1:File1 modified for Change 1, login feature
41a2b1c WI1:File1 created with Hello World added

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log --until='09/15/2020'
commit a0a1d94bc1e89f3dfe00fa5d0fae0f7499d09e86 (HEAD -> master)
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 15:00:32 2020 +0530

    WI2: Logout feature in File1 and Change 3 for enhancement in login feature.

commit 520d17f57600b8b9fdb3813ad6a93da12823f09c
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:52:42 2020 +0530

    WI1:File1 modified for Change 1, login feature

commit 41a2b1c7466beff330b6adbf093e963d8f405bc1
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:48:27 2020 +0530

    WI1:File1 created with Hello World added

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git diff

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git add .

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git commit -m "gitignore file with .class, .jar, .exe, .tar addedd"
[master 348397f] gitignore file with .class, .jar, .exe, .tar addedd
 1 file changed, 4 insertions(+)
 create mode 100644 .gitignore

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
nothing to commit, working tree clean

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git log
commit 348397fc63a0b850f9104c62eaf5b7097b71c080 (HEAD -> master)
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 15:44:04 2020 +0530

    gitignore file with .class, .jar, .exe, .tar addedd

commit a0a1d94bc1e89f3dfe00fa5d0fae0f7499d09e86
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 15:00:32 2020 +0530

    WI2: Logout feature in File1 and Change 3 for enhancement in login feature.

commit 520d17f57600b8b9fdb3813ad6a93da12823f09c
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:52:42 2020 +0530

    WI1:File1 modified for Change 1, login feature

commit 41a2b1c7466beff330b6adbf093e963d8f405bc1
Author: hrishi_budhwant <hrishibudhwant@gmail.com>
Date:   Tue Sep 15 14:48:27 2020 +0530

    WI1:File1 created with Hello World added

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
$ git status
On branch master
nothing to commit, working tree clean

Hrishikesh Budhwant@LAPTOP-IO99CUN1 MINGW64 /g/Persistent Training/Git/GitELTPProjectRepo (master)
